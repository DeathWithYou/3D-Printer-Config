##Lerdge Z for iX
[include mainsail.cfg] 

[exclude_object]

[mcu]
serial = /dev/ttyUSB0
restart_method: command

[filament_switch_sensor FilamentStatus]
pause_on_runout: True
switch_pin: PE0

[stepper_x]
step_pin: PB11
dir_pin: !PB10
enable_pin: !PB12
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PB13  
position_endstop: 0
position_min: -8
position_max: 180
homing_speed: 50


[stepper_y]
step_pin: PB1
dir_pin: !PB0
enable_pin: !PB2
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PB14  
position_endstop: 0
position_min: -12
position_max: 180
homing_speed: 50

[stepper_z]
step_pin: PC4
dir_pin: !PA7
enable_pin: !PC5
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop  # BLTouch als Z-Endstop verwenden
position_max: 195
position_min: -1
homing_speed: 10

[extruder]
step_pin: PA5
dir_pin: !PA4
enable_pin: !PA6
microsteps: 16
rotation_distance: 5.89049568521191
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 22
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 260
min_extrude_temp: 170
max_extrude_cross_section: 5

[verify_heater extruder]
heating_gain: 10        # Minimale Temperaturerhöhung (in Grad Celsius pro Sekunde), die erwartet wird, wenn der Heizer eingeschaltet ist. Anpassen nach Bedarf.
check_gain_time: 20    # Zeitraum (in Sekunden), über den die Temperaturerhöhung überprüft wird. Anpassen nach Bedarf.
hysteresis: 25          # Maximale akzeptable Abweichung (in Grad Celsius) zwischen der Soll- und Ist-Temperatur.
max_error: 25         # Maximale akzeptable Temperaturdifferenz (in Grad Celsius) zwischen der Soll- und Ist-Temperatur, bevor ein Fehler ausgelöst wird.

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC2
pullup_resistor: 4700
control: watermark
min_temp: -100
max_temp: 130

[fan]
pin: PE5

[heater_fan Hotend0_Fan]
pin: PE4
heater: extruder
heater_temp: 45.0

[controller_fan Board_Cooling_Fan]
pin: PA3
idle_timeout:0

[led LED]
white_pin:PC6
initial_WHITE: 1.0


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 10
max_z_accel: 100


[pause_resume]

[display_status]



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 



[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}



[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE  # Dieser Befehl startet das Bett-Nivellierungsverfahren

 

[safe_z_home]
home_xy_position: 98,102   # Dies sollte auf einen Punkt innerhalb Ihres Bettes gesetzt werden, der sicher zum Homen des Z-Achse ist
speed: 50.0
z_hop: 10.0                 # Optionaler Z-Hop nach dem Homen, um Kollisionen zu vermeiden
z_hop_speed: 10.0

[bltouch]
sensor_pin: PD13
control_pin: PD12
x_offset = -34
y_offset = -4
samples: 2
samples_result: average
sample_retract_dist: 3.0
samples_tolerance: 0.119
samples_tolerance_retries: 2
speed: 30.0
probe_with_touch_mode: false
stow_on_each_sample: true
z_offset: 2.120

[bed_mesh]
speed: 80
mesh_min: 7, 7
mesh_max: 146, 168
probe_count: 5,5
algorithm: bicubic
move_check_distance: 3.0

