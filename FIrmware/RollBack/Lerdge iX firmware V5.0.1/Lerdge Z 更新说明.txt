V4.3.4
1、添加对Z主板的硬件驱动

V4.3.5
1、独立优化EX轴功能对Lerdge-Z主板的支持
2、完善Lerdge-Z主板的扩展接口驱动

V4.3.6
1、调整自动调平点数与调平算法的对应关系。
      设置调平点数为0，系统禁用自动调平功能
      设置调平点数为1，系统使用平面方程算法，通过三点采样调平
      设置调平点数为2，系统采用双线性算法，通过四点采样调平
      设置调平点数n（2<n<32），系统采用网格双线性算法，通过n*n个点采样调平
2、调整材料检测逻辑，降低误报耗材用尽导致的暂停问题。

V4.3.6.1
1、移除探测点有效数占比检查，解决部分用户反馈自动调平超过3个点后不能正常探测的问题

V4.4.1
1、重新规划了内部存储空间，更新固件后必须要恢复出厂设置并重新设置与调平
2、重写材料检测滤波算法，降低材料检测误报率（目前处于测试版本）
3、增加各轴运动里程统计，可在系统信息中查看（目前处于测试版本）
4、将各轴脉冲信号高电平持续时间有原来固定的3us改为随脉冲频率动态变化的，以更好的兼容更多驱动器
5、降低各轴脉冲上限频率，由原来180Khz下调为150Khz（主要是为了兼容动态调整脉冲时间而做的妥协）
6、添加退出调平界面自动抬升Z轴的功能，防止调平完成后直接加热打印头导致打印平台被烫坏的可能
7、添加主界面归位图标指示功能
8、优化暂停、意外断电，保存打印进度后，继续打印时的对刀精度
9、增加支持M73指令显示剩余时间（针对prusaslicer切片软件）
10、修复温度错误暂停后，恢复打印时温度清零的bug
11、修复暂停换料时，在换料动作没有执行完成就点击继续打印出现的恢复错误bug
12、修复一些显示内容上的错误

V4.4.2
1、添加支持PrusaSlicer切片软件的缩略图功能
2、解决部分用户反馈的存储器读取死机或者错误问题，目前解决方向考虑的可能是内存溢出
3、添加故障提示灯功能

V4.4.3
1、将退料前的挤出速度设置为固定的6mm/s，解决老版本退料前进料太快出现挤出机挤卡顿的情况
2、修改调平界面的调平图标，当调平点数设置为0时，以浅灰色显示，表示图标无效。左上角增加当前调平点数的显示

V4.5.0
1、添加了Z主板扩展接口的热头扩展代码。
2、调整材料耗尽后无人处理时，只关闭打印头加热功能，不关闭热床温度，避免打印模型由于平台温度降低导致从打印平台上脱落。
3、修复了E轴定时器中初始化时候的定时器索引错误（之前版本开启线性挤出后会有死机概率的原因为此）。
4、调整卸载耗材的动作为：当打印头温度大于160℃时卸载耗材，挤出机先以6mm/s的速度挤出一点耗材，然后再执行卸载耗材。
5、调整了退出路径规划标记的作用位置，避免某些极端条件下的函数重复嵌套，导致的功能异常。
6、提高液晶屏幕操作的反应速度。
7、恢复打印时，先挤出一点耗材，使材料充盈整个打印头内部，以保证打印件恢复打印的位置接口完美。
8、重写了线性挤出的算法与执行方法，为后续添加曲线加减速做准备。
9、调整了M0 M25执行暂停的方法,避免Gcode文件中包含M0 M25时出现无限暂停恢复循环的bug。

V4.6.0
1、修复了V4.5.0系列中的bug
2、为Lerdge-Z主板添加了PT100测温代码，可实现最高550摄氏度测温

V5.0.0 
1：增加了FreeRTOS系统，整个系统由原来的前后台控制模式改为多任务控制模式
2：重构了运动加减速规划算法，使用6段加减速规划方式，使加减速过程更柔和顺滑
3：重构了脉冲生成算法计算，使用类似klipper固件中的迭代法计算脉冲，相比之前的bresenham算法可以更精准的发送驱动脉冲。但是单轴脉冲驱动能力从原来最高200KHz减      低到了最高40KHz
4：重构了线性挤出算法，实现与6段加减速曲线匹配的挤出机压力控制，并引入了压力提前时间
5：重构了步进电机驱动算法，实现更精准的步进电机脉冲控制，提高电机响应速度与定位精度
6：添加了输入整形的功能，目前只有ZV整形器可以使用，其他整形器可以选择，但是没有效果。目前还未添加输入整形参数自动整定的功能，手动输入参数，整形效果不明显。
7：修改了打印界面，支持打印过程中显示模型预览功能，模型缩略图需要再切片软件中设置为qoi格式，并将尺寸设置为216x216
特别注意：
V5.0.0版本为了实现上述的功能，移除了对三角洲（delta）结构的支持，所以V5.0.0版本固件只能支持标准xyz结构；core-xy结构；core-xz结构的机型。
V5.0.0版本只适用于Lerdge-X Lerdge-Z两款主板，不适用于Lerdge-K主板，因为脉冲迭代算法在STM32F407（168MHz）主控中运算能尝试的最大脉冲为200KHZ，分配到5周主板上面为40KHz（200 / 5）,对于Lerdge-K主板，有6个轴，还有更多的板载资源，新固件不能提高Lerdge-K的性能。

关于速度与加速度
V5.0.0版本就是为了大幅提升速度与加速度而开发，为确保高加速度过程与高速过程中电机不丢步，则要确保电机运动过程中每个脉冲都出现在正确的时间点。因此舍弃之前使用的bresenham算法，改用脉冲迭代算法就是为了在更准确的时间点发出脉冲。两种算法的利弊对比如下：

bresenham算法：优点：计算量小，一次计算便可以确定多个轴的下一个脉冲时间。因此可以输出脉冲频率较高的多轴运动
                              缺点：单轴的脉冲序列中，每个脉冲的发生时间与实际电机的转子位置时间会有一定误差，高速时，该误差可能导致丢步或者堵转

迭代法：优点：使用STM32F4系列MCU的float类型计算，每个脉冲的发生时间与实际电机的转子位置时间误差小于1us，可以使用更高的加速度与更高的巡航速度
               缺点：计算量大，每次计算只能计算一个轴的一个脉冲时间，因此MCU的运行频率以及算力决定了计算上限（200KHz），大约5us计算一个脉冲，再分配到每个轴上。

运行速度除了与驱动的脉冲频率有关，还与驱动器的细分数，电机的步距角，传动结构有关
举个例子：
使用迭代法：X轴的驱动能力最高为40KHz，使用1.8度的42步进电机，驱动器的细分数设置为16细分，传动结构使用2GT-20齿的同步轮（周长是40mm），
那么X轴最大运行的速度为：40000 ÷（360÷1.8×16）×40 = 500mm/s，如果驱动器细分数改为32，则最大运行速度为：40000 ÷（360÷1.8×32）×40 = 250mm/s

V5.0.1
1、修复EX轴用于其他轴归位时，不开启限位电机不停止问题
2、修复corexz结构Y轴运动计算错误的问题
3、提高了编码旋钮的刷新率，提升旋钮操作流畅度
4、提高了温度任务的优先级
5、暂时关闭了各轴行程统计功能